c
@dependency.save!
@dependency!
@dependency.User = current_user
@dependency.User
current_user.id
current_user
self.current_user.id
self.current_user
@current_user
@dependency.User_id
c
@dependecy
@current_user
c
n
@network
n
@network
self.set_executor(@network)
self.methods
self
self.set_me
::set_executor(@network)
::set_executor
P = ApplicationController.new
P.class
P = ApplicationController
ApplicationController.class
ApplicationController
set_me
n
network_params
set_me
set_executor
super.set_executor
set_executor
NetworkController.responder
responder
methods.grep /respond/
class
methods.grep /executor/
methods
set_executor
p = NetworkController.new
p = NetworkController
NetworkController
NetworkController.methods
NetworkController.methods.grep /executor/
list
NetworksController.set_executor
NetworksController.super
NetworksController.methods.grep /set/
NetworksController.methods.grep /executor/
NetworksController.methods
NetworksController
c
@network.methods.grep /executor/
@network.methods.grep /set/
@network
c
Network.first.User.username
Network.first.User_id.username
Network.first.User_id
Network.first.User
Network.first
Network.all
@entity.save!
@entity.User_id
@entity.pluck(:User_id)
@entity
c
network_params
c
n 
n 100
n 50
n50
n 30
n30
n 20
n 5
n5
n 5
n
@entity
c
n
s
n
s
@entity.User_id
n
c
@entity.User_id
n
c
n
s
c
n
@entity.User_id
n
@entity.User_id
c
n
@entity.User_id
@entity.id
n
c
@entity.User_id?
@entity.USer_id?
n
entity.User_id.methods
entity.User_id
c
n
c
p.User_id?
p.methods.grep /User/
p.User_id.username
p.User_id
p.class
p.User.username
p.User
p = Computer.first
Computer.user
Computer.User
Computer.all
entity
entity.User_id
entity.User
entity
n
c
n
@entity.User_id.nil?
@entity.User_id.blank?
@entity.User_id.nil?
@entity.User_id
@entity.User
@entity
n
@entity
c
s
c
n
l
User.find(session[:user_id]).id
@entity.class
User.find(session[:user_id]).class
User.find(session[:user_id])..class
User.find(session[:user_id])
@entity.User_id
@entity.User
@entity
s
Computer
Computer.all
c
n
c
@entity.User.nil?
@entity.User
@entity
c
@dependency
n
c
dependency_params.methods
dependency_params.add
dependency_params.class
dependency_params
User.find(session[:user_id])
DependenciesController.protected_method_defined?
DependenciesController.protected_methods_defined?
DependenciesController.protected_methods_defined=
DependenciesController.protected_methods
DependenciesController.protected_instance_methods
DependenciesController.protected_instance_variables
DependenciesController.methods.grep /prote/
DependenciesController.current_user
DependenciesController.methods.grep /user/
DependenciesController.methods.grep /current/
DependenciesController.methods
DependenciesController
@current_user
dependency_params
dependency.params
c
n
c
@service_request.Printer || @service_request.Copier
@service_request.Printer
@service_request.Copier
c
if @service_request.Copier or @service_request.Printer puts 'goes' end
if @service_request.Copier or @service_request.Printer then
if @service_request.Copier or @service_request.Printer thne
if @service_request.Copier or @service_request.Printer
if @service_request.Copier || @service_request.Printer then
if @service_request.Copier || @service_request.Printer
@service_request.kind
data[:model]
data[:serie]
c
n
c
b f:\Coursera\ruby\ActiveInventory\app\pdf\service_request_pdf.rb:138
cx
c
n
@service_request
n
data
c
b f:\Coursera\ruby\ActiveInventory\app\pdf\service_request_pdf.rb:131
data
n
data
n
data
n
data
n
data
n
@service_request.Telephone.brand?
@service_request.Telephone
n
c
n
c
n
c
data
n
c
data
n
step
c
b f:\Coursera\ruby\ActiveInventory\app\pdf\service_request_pdf.rb:225
b f:\Coursera\ruby\ActiveInventory\app\pdf\service_request_pdf.rb:227
b f:\Coursera\ruby\ActiveInventory\app\pdf\service_request_pdf.rb:226
c
data
c
help
data
c
b f:\Coursera\ruby\ActiveInventory\app\pdf\service_request_pdf.rb:225
data
c
data
