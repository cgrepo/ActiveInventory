c
@printers.count
@printers.nil?
@printers
@copiers
c
n 100
n 50
n 30
n
l
@dependencies.each { |d| puts d.Delegation_id }
@dependencies.class
@dependencies.Delegations_id
@dependencies.Delegations
@dependencies.Delegation_id
@dependencies
c
n
@service_request
c
service_request_params[:Delegation_id]
service_request_params
params[:service_request][:Dependency_id]
params[:service_request]
params[:utf8]
params
params[:Delegation_id]
params.each { |p,v| puts p,v }
params.each { |p| puts p }
params
params[:Delegation_id]
params[:Delegation:id]
params[:Delegation]
params
@service_request
n
service_request_params
c
Copier.where(Dependency:params[:Dependency_id]).pluck( :Dependency_id)
Copier.where(Dependency:params[:Dependency_id]).pluck(:name, :Dependency_id)
Copiers
Copier.where(Dependency:params[:Dependency_id]).pluck(:name, :Dependency_id)
Copier.where(Dependency:params[:Dependency_id])
params[:Dependency_id]
params
c
Dependency.where(Delegation:params[:Delegation_id]).count
Dependency.where(Delegation:params[:Delegation_id])
Dependency.where(Delegation:params[:Delegation_id]).pluck(:name, :Delegation_id).first
Dependency.where(Delegation:params[:Delegation_id].to_i).pluck(:name, :Delegation_id).first
Dependency.where(params[:Delegation_id].to_i).pluck(:name, :Delegation_id).first
params[:Delegation_id].to_i
params[:Delegation_id]
Dependency.where(params[:Delegation_id].to_i).pluck(:name, :Delegation_id).first
service_request_params
Dependency.where(params[:Delegation_id]).pluck(:name, :Delegation_id).first
Dependency.where(params[:Delegation_id]).pluck(:name, :Delegation_id)
Dependency.where(params[:Delegation_id]).first.pluck(:name, :Delegation_id)
Dependency.where(params[:Delegation_id]).first
Dependency.where(params[:Delegation_id])
params[:Delegation_id]
params
Dependency.all.where(Delegation_id:1).pluck(:name)
Dependency.all.where(Delegation_id:1).pluck(:Delegation_id).length
Dependency.all.where(Delegation_id:1).pluck(:Delegation_id).cout
Dependency.all.where(Delegation_id:1).pluck(:Delegation_id)
Dependency.all.where(Delegation_id:1)
Dependency.all
Dependency.where(params[:Delegation_id])
c
@dependencies
params
c
params
c
params
c
n 30
n 20
n
@powers
@screens
@copiers
n
c
Copier.where(params[:Copier_id])
service_request_params
Copier.where(service_request:params[:Copier_id])
Copier.where(service_request:params[:service_request_id])
c
n
@dependencies = Dependency.all.limit 3
Dependency.all.limit 3
c
telephone_params
telephone.params
c
telephone_params[:ip]
telephone_params[:ip]}
telephone_params[:ip].clear
telephone_params[:ip].methods
telephone_params[:ip]
telephone_params[:ip] = ''
telephone_params[:ip]
telephone_params
c
true unless telephone_params[:genus] == "VOIP"
true if telephone_params[:genus] == "VOIP"
telephone_params[:genus] == "VOIP"
telephone_params[:genus] 
telephone_params[:genus] == "VOIP"
true if telephone_params[:genus] == "VOIP"
c
telephone_params[:genus]
telephone_params.genus
telephone_params
c
telephone_params
c
telephone_params[:Dependency_id]
telephone_params
c
n
c
n 100
n 50
n 30
n 20
n
c
@consumable
n
@consumable.User_id.nil?
current_user.id
@consumable.User_id
n
c
current_user.id
currente_user.id
@consumable.User_id
c
@consumable.User_id
@consumable.User
n
s
c
@consumable.User_id 
@consumable.User_id
@consumable.User
@consumable
s
@consumable
c
n
c
l
@consumable
n
consumable_params
c
n
l
consumable_params.merge!(User_id:current_user.id)
consumable_params.merge!(User_id:current_user)
consumable_params.merge!(User_id:current_customer)
Consumable
consumable_params.merge!(User_id:current_customer)
consumable_params.merge!(User_id:currente_customer)
consumable_params
current_user.id
current_user
list
consumable_params
consumable_params.methods
consumable_params.class
consumable_params
c
params.class
params
@consumable
c
n
l
nil == false
nil == False
@consumable
puts "HEY" unless @consumable.nil?
puts "HEY" unless @consumable
@consumable
c
list
@consumable.nil?
@consumable
c
@dependency.save!
@dependency!
@dependency.User = current_user
@dependency.User
current_user.id
current_user
self.current_user.id
self.current_user
@current_user
@dependency.User_id
c
@dependecy
@current_user
c
n
@network
n
@network
self.set_executor(@network)
self.methods
self
self.set_me
::set_executor(@network)
::set_executor
P = ApplicationController.new
P.class
P = ApplicationController
ApplicationController.class
ApplicationController
set_me
n
network_params
set_me
set_executor
super.set_executor
set_executor
NetworkController.responder
responder
methods.grep /respond/
class
methods.grep /executor/
methods
set_executor
p = NetworkController.new
p = NetworkController
NetworkController
NetworkController.methods
NetworkController.methods.grep /executor/
list
NetworksController.set_executor
NetworksController.super
NetworksController.methods.grep /set/
NetworksController.methods.grep /executor/
NetworksController.methods
NetworksController
c
@network.methods.grep /executor/
@network.methods.grep /set/
@network
c
Network.first.User.username
